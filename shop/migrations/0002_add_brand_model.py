# Generated by Django 5.0.1 on 2024-12-19 10:30

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def create_brands_and_migrate_data(apps, schema_editor):
    """Create Brand model and migrate existing brand data"""
    Product = apps.get_model('shop', 'Product')
    Brand = apps.get_model('shop', 'Brand')
    
    # Get all unique brand names from existing products
    brand_names = set()
    for product in Product.objects.all():
        if hasattr(product, 'brand') and product.brand:
            if isinstance(product.brand, str):
                brand_names.add(product.brand)
    
    # Create Brand objects for each unique brand name
    brand_map = {}
    for brand_name in brand_names:
        if brand_name:
            # Create a slug from the brand name
            slug = brand_name.lower().replace(' ', '-').replace('و', '-')
            counter = 1
            original_slug = slug
            while Brand.objects.filter(slug=slug).exists():
                slug = f"{original_slug}-{counter}"
                counter += 1
            
            brand, created = Brand.objects.get_or_create(
                name=brand_name,
                defaults={
                    'slug': slug,
                    'description': f'برند {brand_name}',
                    'is_active': True,
                    'created_at': django.utils.timezone.now(),
                    'updated_at': django.utils.timezone.now(),
                }
            )
            brand_map[brand_name] = brand
    
    # Update products to use Brand references
    for product in Product.objects.all():
        if hasattr(product, 'brand') and product.brand:
            if isinstance(product.brand, str) and product.brand in brand_map:
                product.brand = brand_map[product.brand]
                product.save()


def reverse_migrate_brand_data(apps, schema_editor):
    """Reverse the migration - convert Brand references back to strings"""
    Product = apps.get_model('shop', 'Product')
    
    for product in Product.objects.all():
        if hasattr(product, 'brand') and product.brand:
            if hasattr(product.brand, 'name'):
                product.brand = product.brand.name
                product.save()


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0001_initial'),
    ]

    operations = [
        # Create Brand model
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام برند')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='اسلاگ')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/', verbose_name='لوگو')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('website', models.URLField(blank=True, verbose_name='وب‌سایت')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
            ],
            options={
                'verbose_name': 'برند',
                'verbose_name_plural': 'برندها',
                'ordering': ['name'],
            },
        ),
        
        # Add brand field to Product model (temporarily as CharField)
        migrations.AddField(
            model_name='product',
            name='brand_temp',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='برند'),
        ),
        
        # Copy existing brand data to temporary field
        migrations.RunSQL(
            "UPDATE shop_product SET brand_temp = brand;",
            "UPDATE shop_product SET brand = brand_temp;"
        ),
        
        # Remove old brand field
        migrations.RemoveField(
            model_name='product',
            name='brand',
        ),
        
        # Add new brand field as ForeignKey
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='shop.brand', verbose_name='برند'),
        ),
        
        # Migrate data from temporary field to Brand model
        migrations.RunPython(create_brands_and_migrate_data, reverse_migrate_brand_data),
        
        # Remove temporary field
        migrations.RemoveField(
            model_name='product',
            name='brand_temp',
        ),
    ]
