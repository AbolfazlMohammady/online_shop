<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ورود به حساب کاربری - گربه انیمیشنی</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
    <style>
        * {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }

        .login-container {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .login-card {
            background: white;
            border-radius: 24px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
            overflow: hidden;
            width: 100%;
            max-width: 400px;
            position: relative;
        }

        /* Cat Animation Styles */
        .cat-container {
            position: relative;
            width: 120px;
            height: 120px;
            margin: 0 auto 20px;
        }

        .cat-face {
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, #ffa726, #ff9800);
            border-radius: 50% 50% 45% 45%;
            position: relative;
            margin: 0 auto;
            box-shadow: 0 8px 20px rgba(255, 152, 0, 0.3);
            transition: all 0.3s ease;
        }

        .cat-ear {
            width: 25px;
            height: 30px;
            background: linear-gradient(135deg, #ffa726, #ff9800);
            border-radius: 50% 50% 0 0;
            position: absolute;
            top: -15px;
            transform-origin: bottom center;
            transition: all 0.3s ease;
        }

        .cat-ear.left {
            left: 15px;
            transform: rotate(-20deg);
        }

        .cat-ear.right {
            right: 15px;
            transform: rotate(20deg);
        }

        .cat-ear-inner {
            width: 12px;
            height: 15px;
            background: #ffcc80;
            border-radius: 50% 50% 0 0;
            position: absolute;
            top: 3px;
            left: 50%;
            transform: translateX(-50%);
        }

        .cat-eyes {
            position: absolute;
            top: 35px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 20px;
        }

        .cat-eye {
            width: 16px;
            height: 16px;
            background: white;
            border-radius: 50%;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .cat-pupil {
            width: 8px;
            height: 8px;
            background: #333;
            border-radius: 50%;
            position: absolute;
            top: 4px;
            left: 4px;
            transition: all 0.2s ease;
        }

        .cat-nose {
            width: 8px;
            height: 6px;
            background: #ff5722;
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
            position: absolute;
            top: 55px;
            left: 50%;
            transform: translateX(-50%);
        }

        .cat-mouth {
            position: absolute;
            top: 65px;
            left: 50%;
            transform: translateX(-50%);
        }

        .cat-mouth::before,
        .cat-mouth::after {
            content: '';
            width: 8px;
            height: 8px;
            border: 2px solid #666;
            border-top: none;
            border-right: none;
            position: absolute;
            border-radius: 0 0 0 100%;
        }

        .cat-mouth::before {
            left: -4px;
            transform: rotate(45deg);
        }

        .cat-mouth::after {
            right: -4px;
            transform: rotate(-45deg) scaleX(-1);
        }

        .cat-whiskers {
            position: absolute;
            top: 50px;
            left: 50%;
            transform: translateX(-50%);
            width: 120px;
            height: 20px;
        }

        .whisker {
            position: absolute;
            width: 25px;
            height: 1px;
            background: #666;
            border-radius: 1px;
            transition: all 0.3s ease;
        }

        .whisker.left-1 { left: 5px; top: 5px; transform: rotate(-10deg); }
        .whisker.left-2 { left: 8px; top: 12px; transform: rotate(-5deg); }
        .whisker.right-1 { right: 5px; top: 5px; transform: rotate(10deg); }
        .whisker.right-2 { right: 8px; top: 12px; transform: rotate(5deg); }

        /* Cat Hands */
        .cat-hands {
            position: absolute;
            top: 90px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 35px;
            opacity: 0;
            transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 10;
        }

        .cat-hands.show {
            opacity: 1;
            top: 35px;
            animation: handsRise 0.8s cubic-bezier(0.4, 0, 0.2, 1);
        }

        @keyframes handsRise {
            0% {
                opacity: 0;
                top: 90px;
                transform: translateX(-50%) scale(0.8);
            }
            100% {
                opacity: 1;
                top: 35px;
                transform: translateX(-50%) scale(1);
            }
        }

        .cat-hand {
            width: 28px;
            height: 35px;
            background: linear-gradient(145deg, #ffa726, #ff9800);
            border-radius: 45% 45% 50% 50%;
            position: relative;
            box-shadow: 
                0 4px 8px rgba(255, 152, 0, 0.3),
                0 8px 16px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.2);
            transform-origin: bottom center;
        }

        .cat-hand::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 50%;
            transform: translateX(-50%);
            width: 24px;
            height: 8px;
            background: radial-gradient(ellipse, rgba(0, 0, 0, 0.2) 0%, transparent 70%);
            border-radius: 50%;
            filter: blur(2px);
        }

        /* Cat Hand Palm */
        .cat-hand::before {
            content: '';
            position: absolute;
            top: 8px;
            left: 50%;
            transform: translateX(-50%);
            width: 18px;
            height: 20px;
            background: linear-gradient(145deg, #ffb74d, #ffa726);
            border-radius: 50% 50% 40% 40%;
            box-shadow: inset 0 2px 4px rgba(255, 152, 0, 0.2);
        }

        /* Cat Fingers */
        .cat-finger {
            position: absolute;
            width: 6px;
            height: 12px;
            background: linear-gradient(145deg, #ffa726, #ff9800);
            border-radius: 50% 50% 30% 30%;
            box-shadow: 0 1px 3px rgba(255, 152, 0, 0.3);
        }

        .cat-finger:nth-child(1) {
            top: -2px;
            left: 3px;
            transform: rotate(-15deg);
        }

        .cat-finger:nth-child(2) {
            top: -4px;
            left: 8px;
            height: 14px;
        }

        .cat-finger:nth-child(3) {
            top: -3px;
            left: 13px;
            height: 13px;
            transform: rotate(10deg);
        }

        .cat-finger:nth-child(4) {
            top: 2px;
            left: 18px;
            height: 10px;
            transform: rotate(20deg);
        }

        /* Thumb */
        .cat-thumb {
            position: absolute;
            top: 12px;
            left: -2px;
            width: 5px;
            height: 8px;
            background: linear-gradient(145deg, #ffa726, #ff9800);
            border-radius: 50%;
            transform: rotate(-30deg);
            box-shadow: 0 1px 2px rgba(255, 152, 0, 0.3);
        }

        .cat-hand.peek {
            animation: handPeek 0.8s ease-in-out;
        }

        .cat-hand.left.peek {
            transform: translateX(-8px) rotate(-10deg);
        }

        .cat-hand.right.peek {
            transform: translateX(8px) rotate(10deg);
        }

        @keyframes handPeek {
            0% { transform: translateX(0) rotate(0deg); }
            50% { transform: translateX(-12px) rotate(-15deg); }
            100% { transform: translateX(0) rotate(0deg); }
        }

        /* Cat Emotions */
        .cat-face.happy {
            transform: scale(1.05);
        }

        .cat-face.happy .cat-eye {
            transform: scaleY(0.7);
        }

        .cat-face.sleepy .cat-eye {
            height: 8px;
            border-radius: 50% 50% 0 0;
        }

        .cat-face.surprised {
            transform: scale(1.1);
        }

        .cat-face.surprised .cat-eye {
            width: 20px;
            height: 20px;
        }

        .cat-face.surprised .cat-pupil {
            width: 12px;
            height: 12px;
            top: 4px;
            left: 4px;
        }

        /* Input Focus Effects */
        .input-group {
            position: relative;
            margin-bottom: 20px;
        }

        .input-field {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8fafc;
        }

        .input-field:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .input-label {
            position: absolute;
            top: 16px;
            right: 20px;
            color: #64748b;
            transition: all 0.3s ease;
            pointer-events: none;
            background: transparent;
            padding: 0 4px;
        }

        .input-field:focus + .input-label,
        .input-field:not(:placeholder-shown) + .input-label {
            top: -8px;
            font-size: 12px;
            color: #667eea;
            background: white;
        }

        .password-toggle {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: #64748b;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .password-toggle:hover {
            background: #f1f5f9;
            color: #667eea;
        }

        .login-btn {
            width: 100%;
            padding: 16px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .login-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .login-btn:active {
            transform: translateY(0);
        }

        /* Responsive Design */
        @media (max-width: 480px) {
            .login-card {
                margin: 10px;
                border-radius: 16px;
            }
            
            .cat-container {
                width: 100px;
                height: 100px;
            }
            
            .cat-face {
                width: 80px;
                height: 80px;
            }
            
            .cat-eyes {
                top: 28px;
                gap: 16px;
            }
            
            .cat-nose {
                top: 44px;
            }
            
            .cat-mouth {
                top: 52px;
            }
        }

        /* Floating Animation */
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        .cat-container {
            animation: float 3s ease-in-out infinite;
        }

        /* Tail Animation */
        .cat-tail {
            position: absolute;
            bottom: -10px;
            right: -15px;
            width: 30px;
            height: 40px;
            background: linear-gradient(135deg, #ffa726, #ff9800);
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
            transform-origin: top center;
            animation: tailWag 2s ease-in-out infinite;
        }

        @keyframes tailWag {
            0%, 100% { transform: rotate(10deg); }
            50% { transform: rotate(-10deg); }
        }

        /* Cat Paws */
        .cat-paws {
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 15px;
        }

        .cat-paw {
            width: 15px;
            height: 15px;
            background: linear-gradient(135deg, #ffa726, #ff9800);
            border-radius: 50% 50% 40% 40%;
            position: relative;
            animation: pawFloat 2.5s ease-in-out infinite;
        }

        .cat-paw:nth-child(2) {
            animation-delay: 0.3s;
        }

        .cat-paw::before {
            content: '';
            position: absolute;
            top: -3px;
            left: 50%;
            transform: translateX(-50%);
            width: 8px;
            height: 8px;
            background: #ffcc80;
            border-radius: 50%;
        }

        @keyframes pawFloat {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-5px) rotate(5deg); }
        }

        /* Blinking Animation */
        .cat-eye.blink {
            animation: blink 0.3s ease-in-out;
        }

        @keyframes blink {
            0%, 100% { transform: scaleY(1); }
            50% { transform: scaleY(0.1); }
        }

        /* Heart Eyes for Success */
        .cat-eye.heart::after {
            content: '💖';
            position: absolute;
            top: -2px;
            left: -2px;
            font-size: 20px;
            animation: heartBeat 0.8s ease-in-out infinite;
        }

        @keyframes heartBeat {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.2); }
        }

        /* Cat Cheeks */
        .cat-cheeks {
            position: absolute;
            top: 45px;
            left: 50%;
            transform: translateX(-50%);
            width: 110px;
            height: 30px;
        }

        .cat-cheek {
            position: absolute;
            width: 12px;
            height: 12px;
            background: rgba(255, 182, 193, 0.6);
            border-radius: 50%;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .cat-cheek.left {
            left: 8px;
            top: 8px;
        }

        .cat-cheek.right {
            right: 8px;
            top: 8px;
        }

        .cat-face.happy .cat-cheek {
            opacity: 1;
            animation: cheekGlow 1s ease-in-out infinite alternate;
        }

        @keyframes cheekGlow {
            0% { opacity: 0.6; transform: scale(1); }
            100% { opacity: 0.9; transform: scale(1.1); }
        }

        /* Loading Spinner for Login */
        .loading-spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .login-btn.loading .loading-spinner {
            display: inline-block;
        }

        .login-btn.loading .btn-text {
            display: none;
        }

        /* Success Confetti */
        .confetti {
            position: fixed;
            width: 10px;
            height: 10px;
            background: #ff6b6b;
            animation: confettiFall 3s linear infinite;
            z-index: 1000;
        }

        .confetti:nth-child(odd) {
            background: #4ecdc4;
            animation-delay: 0.5s;
        }

        .confetti:nth-child(3n) {
            background: #45b7d1;
            animation-delay: 1s;
        }

        .confetti:nth-child(4n) {
            background: #f9ca24;
            animation-delay: 1.5s;
        }

        @keyframes confettiFall {
            0% {
                transform: translateY(-100vh) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(100vh) rotate(720deg);
                opacity: 0;
            }
        }

        /* Typing Indicator */
        .typing-indicator {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .typing-indicator.show {
            opacity: 1;
            top: -35px;
        }

        .typing-indicator::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 0;
            border-left: 5px solid transparent;
            border-right: 5px solid transparent;
            border-top: 5px solid rgba(0, 0, 0, 0.8);
        }

        /* Error Shake Animation */
        .shake {
            animation: shake 0.5s ease-in-out;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        /* Cat Sleep Animation */
        .cat-face.sleeping {
            animation: sleepBreathe 2s ease-in-out infinite;
        }

        @keyframes sleepBreathe {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.02); }
        }

        .cat-face.sleeping .cat-eye {
            height: 4px;
            border-radius: 50% 50% 0 0;
            background: #333;
        }

        /* Z's for sleeping */
        .sleep-z {
            position: absolute;
            top: -20px;
            right: -10px;
            font-size: 16px;
            color: #667eea;
            opacity: 0;
            animation: floatZ 2s ease-in-out infinite;
        }

        .sleep-z:nth-child(2) {
            top: -30px;
            right: -5px;
            font-size: 12px;
            animation-delay: 0.5s;
        }

        .sleep-z:nth-child(3) {
            top: -40px;
            right: 0px;
            font-size: 10px;
            animation-delay: 1s;
        }

        @keyframes floatZ {
            0%, 100% { opacity: 0; transform: translateY(0); }
            50% { opacity: 1; transform: translateY(-10px); }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-card">
            <div class="p-8">
                <!-- Animated Cat -->
                <div class="cat-container">
                    <div id="cat-face" class="cat-face">
                        <div class="cat-ear left">
                            <div class="cat-ear-inner"></div>
                        </div>
                        <div class="cat-ear right">
                            <div class="cat-ear-inner"></div>
                        </div>
                        
                        <div class="cat-eyes">
                            <div class="cat-eye">
                                <div id="left-pupil" class="cat-pupil"></div>
                            </div>
                            <div class="cat-eye">
                                <div id="right-pupil" class="cat-pupil"></div>
                            </div>
                        </div>
                        
                        <div class="cat-nose"></div>
                        <div class="cat-mouth"></div>
                        
                        <div class="cat-whiskers">
                            <div class="whisker left-1"></div>
                            <div class="whisker left-2"></div>
                            <div class="whisker right-1"></div>
                            <div class="whisker right-2"></div>
                        </div>
                        
                        <!-- Cat Cheeks -->
                        <div class="cat-cheeks">
                            <div class="cat-cheek left"></div>
                            <div class="cat-cheek right"></div>
                        </div>
                        
                        <div class="cat-tail"></div>
                        
                        <!-- Cat Paws -->
                        <div class="cat-paws">
                            <div class="cat-paw"></div>
                            <div class="cat-paw"></div>
                        </div>
                        
                        <!-- Sleep Z's -->
                        <div id="sleep-zs" class="sleep-zs" style="display: none;">
                            <div class="sleep-z">Z</div>
                            <div class="sleep-z">z</div>
                            <div class="sleep-z">z</div>
                        </div>
                        
                        <!-- Typing Indicator -->
                        <div id="typing-indicator" class="typing-indicator">
                            در حال تایپ...
                        </div>
                    </div>
                    
                    <!-- Cat Hands for Password -->
                    <div id="cat-hands" class="cat-hands">
                        <div id="left-hand" class="cat-hand left">
                            <div class="cat-finger"></div>
                            <div class="cat-finger"></div>
                            <div class="cat-finger"></div>
                            <div class="cat-finger"></div>
                            <div class="cat-thumb"></div>
                        </div>
                        <div id="right-hand" class="cat-hand right">
                            <div class="cat-finger"></div>
                            <div class="cat-finger"></div>
                            <div class="cat-finger"></div>
                            <div class="cat-finger"></div>
                            <div class="cat-thumb"></div>
                        </div>
                    </div>
                </div>

                <!-- Login Title -->
                <div class="text-center mb-8">
                    <h1 class="text-2xl font-bold text-gray-800 mb-2">خوش آمدید! 🐱</h1>
                    <p class="text-gray-600">لطفاً وارد حساب کاربری خود شوید</p>
                </div>

                <!-- Login Form -->
                <form id="login-form">
                    <!-- Email/Phone Input -->
                    <div class="input-group">
                        <input 
                            type="text" 
                            id="email-input" 
                            class="input-field" 
                            placeholder=" "
                            autocomplete="username"
                        >
                        <label for="email-input" class="input-label">
                            <i class="fas fa-envelope ml-2"></i>
                            ایمیل یا شماره تلفن
                        </label>
                    </div>

                    <!-- Password Input -->
                    <div class="input-group">
                        <input 
                            type="password" 
                            id="password-input" 
                            class="input-field" 
                            placeholder=" "
                            autocomplete="current-password"
                        >
                        <label for="password-input" class="input-label">
                            <i class="fas fa-lock ml-2"></i>
                            رمز عبور
                        </label>
                        <button type="button" id="password-toggle" class="password-toggle">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>

                    <!-- Remember Me & Forgot Password -->
                    <div class="flex items-center justify-between mb-6">
                        <label class="flex items-center cursor-pointer">
                            <input type="checkbox" class="ml-2 text-purple-600 rounded focus:ring-purple-500">
                            <span class="text-sm text-gray-600">مرا به خاطر بسپار</span>
                        </label>
                        <a href="#" class="text-sm text-purple-600 hover:text-purple-700 transition-colors">
                            فراموشی رمز عبور؟
                        </a>
                    </div>

                    <!-- Login Button -->
                    <button type="submit" id="login-btn" class="login-btn">
                        <div class="loading-spinner"></div>
                        <span class="btn-text">
                            <i class="fas fa-sign-in-alt ml-2"></i>
                            ورود به حساب
                        </span>
                    </button>
                </form>

                <!-- Sign Up Link -->
                <div class="text-center mt-6">
                    <p class="text-gray-600">
                        حساب کاربری ندارید؟
                        <a href="#" class="text-purple-600 hover:text-purple-700 font-semibold transition-colors">
                            ثبت نام کنید
                        </a>
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Cat Animation Controller
        class CatAnimator {
            constructor() {
                this.catFace = document.getElementById('cat-face');
                this.leftPupil = document.getElementById('left-pupil');
                this.rightPupil = document.getElementById('right-pupil');
                this.catHands = document.getElementById('cat-hands');
                this.leftHand = document.getElementById('left-hand');
                this.rightHand = document.getElementById('right-hand');
                this.typingIndicator = document.getElementById('typing-indicator');
                this.sleepZs = document.getElementById('sleep-zs');
                this.loginBtn = document.getElementById('login-btn');
                
                this.emailInput = document.getElementById('email-input');
                this.passwordInput = document.getElementById('password-input');
                this.passwordToggle = document.getElementById('password-toggle');
                
                this.isPasswordVisible = false;
                this.isTypingPassword = false;
                this.blinkInterval = null;
                this.idleTimeout = null;
                
                this.init();
                this.startBlinking();
                this.startIdleTimer();
            }
            
            init() {
                // Email input events
                this.emailInput.addEventListener('input', () => {
                    this.followTyping(this.emailInput);
                    this.showTypingIndicator();
                    this.resetIdleTimer();
                });
                this.emailInput.addEventListener('focus', () => {
                    this.setEmotion('happy');
                    this.resetIdleTimer();
                });
                this.emailInput.addEventListener('blur', () => {
                    this.setEmotion('normal');
                    this.hideTypingIndicator();
                });
                
                // Password input events
                this.passwordInput.addEventListener('input', () => {
                    this.handlePasswordTyping();
                    this.resetIdleTimer();
                });
                this.passwordInput.addEventListener('focus', () => {
                    this.handlePasswordFocus();
                    this.resetIdleTimer();
                });
                this.passwordInput.addEventListener('blur', () => {
                    this.handlePasswordBlur();
                });
                
                // Password toggle
                this.passwordToggle.addEventListener('click', () => this.togglePasswordVisibility());
                
                // Mouse movement for eye tracking
                document.addEventListener('mousemove', (e) => {
                    this.trackMouse(e);
                    this.resetIdleTimer();
                });
                
                // Form submission
                document.getElementById('login-form').addEventListener('submit', (e) => {
                    e.preventDefault();
                    this.handleLogin();
                });
                
                // Click events to wake up cat
                document.addEventListener('click', () => this.resetIdleTimer());
                document.addEventListener('keypress', () => this.resetIdleTimer());
            }
            
            followTyping(input) {
                const rect = input.getBoundingClientRect();
                const inputCenter = rect.left + rect.width / 2;
                const screenCenter = window.innerWidth / 2;
                
                // Calculate pupil position based on input position
                const offset = Math.max(-3, Math.min(3, (inputCenter - screenCenter) / 50));
                
                this.leftPupil.style.transform = `translateX(${offset}px)`;
                this.rightPupil.style.transform = `translateX(${offset}px)`;
                
                // Add typing animation
                this.setEmotion('happy');
                
                // Wiggle ears when typing
                this.wiggleEars();
            }
            
            handlePasswordTyping() {
                this.isTypingPassword = true;
                this.showHands();
                this.setEmotion('sleepy');
                
                // Hide pupils behind hands
                this.leftPupil.style.opacity = '0';
                this.rightPupil.style.opacity = '0';
            }
            
            handlePasswordFocus() {
                if (!this.isPasswordVisible) {
                    this.showHands();
                    this.setEmotion('sleepy');
                }
            }
            
            handlePasswordBlur() {
                this.isTypingPassword = false;
                if (!this.passwordInput.value) {
                    this.hideHands();
                    this.setEmotion('normal');
                    this.leftPupil.style.opacity = '1';
                    this.rightPupil.style.opacity = '1';
                }
            }
            
            togglePasswordVisibility() {
                this.isPasswordVisible = !this.isPasswordVisible;
                
                if (this.isPasswordVisible) {
                    this.passwordInput.type = 'text';
                    this.passwordToggle.innerHTML = '<i class="fas fa-eye-slash"></i>';
                    this.peekThroughHands();
                } else {
                    this.passwordInput.type = 'password';
                    this.passwordToggle.innerHTML = '<i class="fas fa-eye"></i>';
                    if (this.passwordInput.value) {
                        this.showHands();
                    }
                }
            }
            
            showHands() {
                this.catHands.classList.add('show');
                this.leftPupil.style.opacity = '0';
                this.rightPupil.style.opacity = '0';
            }
            
            hideHands() {
                this.catHands.classList.remove('show');
                this.leftPupil.style.opacity = '1';
                this.rightPupil.style.opacity = '1';
            }
            
            peekThroughHands() {
                // Move one hand slightly to peek
                this.rightHand.classList.add('peek');
                
                // Show one eye peeking through
                setTimeout(() => {
                    this.rightPupil.style.opacity = '1';
                    this.setEmotion('surprised');
                }, 200);
                
                setTimeout(() => {
                    this.rightHand.classList.remove('peek');
                    if (!this.isPasswordVisible) {
                        this.rightPupil.style.opacity = '0';
                    }
                }, 800);
            }
            
            trackMouse(event) {
                if (this.isTypingPassword && !this.isPasswordVisible) return;
                
                const catRect = this.catFace.getBoundingClientRect();
                const catCenterX = catRect.left + catRect.width / 2;
                const catCenterY = catRect.top + catRect.height / 2;
                
                const deltaX = event.clientX - catCenterX;
                const deltaY = event.clientY - catCenterY;
                
                // Limit pupil movement
                const maxMove = 3;
                const moveX = Math.max(-maxMove, Math.min(maxMove, deltaX / 20));
                const moveY = Math.max(-maxMove, Math.min(maxMove, deltaY / 20));
                
                this.leftPupil.style.transform = `translate(${moveX}px, ${moveY}px)`;
                this.rightPupil.style.transform = `translate(${moveX}px, ${moveY}px)`;
            }
            
            setEmotion(emotion) {
                this.catFace.className = `cat-face ${emotion}`;
            }
            
            wiggleEars() {
                const ears = document.querySelectorAll('.cat-ear');
                ears.forEach(ear => {
                    ear.style.animation = 'none';
                    ear.offsetHeight; // Trigger reflow
                    ear.style.animation = 'earWiggle 0.5s ease-in-out';
                });
            }
            
            handleLogin() {
                // Validate inputs
                if (!this.emailInput.value.trim() || !this.passwordInput.value.trim()) {
                    this.showError();
                    return;
                }
                
                // Show loading
                this.loginBtn.classList.add('loading');
                this.setEmotion('surprised');
                
                // Simulate login process
                setTimeout(() => {
                    this.loginBtn.classList.remove('loading');
                    this.setEmotion('happy');
                    this.showHeartEyes();
                    this.createConfetti();
                    
                    // Success animation
                    setTimeout(() => {
                        this.catFace.style.transform = 'scale(1.2) rotate(5deg)';
                        this.showSuccessMessage();
                    }, 300);
                    
                    setTimeout(() => {
                        this.catFace.style.transform = 'scale(1) rotate(0deg)';
                        this.removeHeartEyes();
                    }, 2000);
                }, 2000);
            }
            
            showError() {
                this.catFace.classList.add('shake');
                this.setEmotion('surprised');
                
                setTimeout(() => {
                    this.catFace.classList.remove('shake');
                    this.setEmotion('normal');
                }, 500);
                
                this.showErrorMessage('لطفاً تمام فیلدها را پر کنید!');
            }
            
            showErrorMessage(message) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
                errorDiv.innerHTML = `
                    <div class="flex items-center gap-2">
                        <i class="fas fa-exclamation-circle"></i>
                        <span>${message}</span>
                    </div>
                `;
                
                document.body.appendChild(errorDiv);
                
                setTimeout(() => {
                    errorDiv.classList.remove('translate-x-full');
                }, 100);
                
                setTimeout(() => {
                    errorDiv.classList.add('translate-x-full');
                    setTimeout(() => {
                        document.body.removeChild(errorDiv);
                    }, 300);
                }, 3000);
            }
            
            showHeartEyes() {
                document.querySelectorAll('.cat-eye').forEach(eye => {
                    eye.classList.add('heart');
                });
            }
            
            removeHeartEyes() {
                document.querySelectorAll('.cat-eye').forEach(eye => {
                    eye.classList.remove('heart');
                });
            }
            
            createConfetti() {
                for (let i = 0; i < 50; i++) {
                    setTimeout(() => {
                        const confetti = document.createElement('div');
                        confetti.className = 'confetti';
                        confetti.style.left = Math.random() * 100 + 'vw';
                        confetti.style.animationDelay = Math.random() * 3 + 's';
                        confetti.style.animationDuration = (Math.random() * 3 + 2) + 's';
                        document.body.appendChild(confetti);
                        
                        setTimeout(() => {
                            document.body.removeChild(confetti);
                        }, 5000);
                    }, i * 100);
                }
            }
            
            startBlinking() {
                this.blinkInterval = setInterval(() => {
                    if (!this.isTypingPassword) {
                        document.querySelectorAll('.cat-eye').forEach(eye => {
                            eye.classList.add('blink');
                            setTimeout(() => {
                                eye.classList.remove('blink');
                            }, 300);
                        });
                    }
                }, 3000 + Math.random() * 2000);
            }
            
            startIdleTimer() {
                this.resetIdleTimer();
            }
            
            resetIdleTimer() {
                clearTimeout(this.idleTimeout);
                this.wakeUp();
                
                this.idleTimeout = setTimeout(() => {
                    this.goToSleep();
                }, 10000); // Sleep after 10 seconds of inactivity
            }
            
            goToSleep() {
                this.setEmotion('sleeping');
                this.sleepZs.style.display = 'block';
            }
            
            wakeUp() {
                this.catFace.classList.remove('sleeping');
                this.sleepZs.style.display = 'none';
            }
            
            showTypingIndicator() {
                this.typingIndicator.classList.add('show');
                setTimeout(() => {
                    this.hideTypingIndicator();
                }, 1500);
            }
            
            hideTypingIndicator() {
                this.typingIndicator.classList.remove('show');
            }
            
            showSuccessMessage() {
                const message = document.createElement('div');
                message.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
                message.innerHTML = `
                    <div class="flex items-center gap-2">
                        <i class="fas fa-check-circle"></i>
                        <span>ورود موفقیت‌آمیز بود! 🎉</span>
                    </div>
                `;
                
                document.body.appendChild(message);
                
                setTimeout(() => {
                    message.classList.remove('translate-x-full');
                }, 100);
                
                setTimeout(() => {
                    message.classList.add('translate-x-full');
                    setTimeout(() => {
                        document.body.removeChild(message);
                    }, 300);
                }, 3000);
            }
        }
        
        // Add ear wiggle animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes earWiggle {
                0%, 100% { transform: rotate(-20deg); }
                25% { transform: rotate(-30deg); }
                75% { transform: rotate(-10deg); }
            }
            
            .cat-ear.right {
                animation-name: earWiggleRight;
            }
            
            @keyframes earWiggleRight {
                0%, 100% { transform: rotate(20deg); }
                25% { transform: rotate(30deg); }
                75% { transform: rotate(10deg); }
            }
        `;
        document.head.appendChild(style);
        
        // Initialize cat animator when page loads
        document.addEventListener('DOMContentLoaded', () => {
            new CatAnimator();
        });
        
        // Add some extra interactive effects
        document.addEventListener('DOMContentLoaded', () => {
            // Add sparkle effect on successful interactions
            function createSparkle(x, y) {
                const sparkle = document.createElement('div');
                sparkle.className = 'fixed pointer-events-none z-50';
                sparkle.style.left = x + 'px';
                sparkle.style.top = y + 'px';
                sparkle.innerHTML = '✨';
                sparkle.style.animation = 'sparkleFloat 1s ease-out forwards';
                
                document.body.appendChild(sparkle);
                
                setTimeout(() => {
                    document.body.removeChild(sparkle);
                }, 1000);
            }
            
            // Add sparkle animation
            const sparkleStyle = document.createElement('style');
            sparkleStyle.textContent = `
                @keyframes sparkleFloat {
                    0% {
                        opacity: 1;
                        transform: translateY(0) scale(0);
                    }
                    50% {
                        opacity: 1;
                        transform: translateY(-20px) scale(1);
                    }
                    100% {
                        opacity: 0;
                        transform: translateY(-40px) scale(0);
                    }
                }
            `;
            document.head.appendChild(sparkleStyle);
            
            // Add sparkles on input focus
            document.querySelectorAll('.input-field').forEach(input => {
                input.addEventListener('focus', (e) => {
                    const rect = e.target.getBoundingClientRect();
                    createSparkle(rect.right - 20, rect.top + rect.height / 2);
                });
            });
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'96aca6eef1bcd3a6',t:'MTc1NDQ2MzU3Mi4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
